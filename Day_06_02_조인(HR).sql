/*
    셀프 조인(SELF JOIN)
    1. 하나의 테이블에 PK와 FK가 모두 있는 경우에 사용되는 조인이다.
    2. 동일한 테이블을 조인하기 때문에 별명을 다르게 지정해서 조인한다.
    3. 문법은 기본적으로 내부 조인/외부 조인과 동일하다.
*/


-- 모든 사원들의 EMPLOYEE_ID, FIRST_NAME, LAST_NAME, MANAGER의 FISET_NAME을 조회하시오.
-- 1:M 관계 파악
-- PK           FK
-- EMPLOYEE_ID  MANAGERA-ID

-- 조인 조건 파악
-- 사원테이블 E  -  매니저테이블 M (사실 같은 테이블이지만)
-- 사원들의 매니저번호 - 매니저의 사원번호
SELECT 
      E.EMPLOYEE_ID, E.FIRST_NAME, E.LAST_NAME -- 각 사원들의 정보
    , M.FIRST_NAME                             -- 매니저 정보
  FROM
      EMPLOYEES E LEFT OUTER JOIN JOIN EMPLOYEES M
   ON 
      E.MANAGER_ID = M.EMPLOYEE_ID
ORDER BY
      E.EMPLOYEE_ID; -- INNER JOIN / Steven이안나옴 Neena부터 나옴, Steven의 상사번호가 NULL값이라서
      
-- 셀프조인 연습.
-- 각 사원 중에서 매니저보다 먼저 입사한 사원을 조회하시오.
SELECT 
      E.EMPLOYEE_ID, E.FIRST_NAME, E.HIRE_DATE AS 입사일자 -- 각 사원들의 정보 / 입사일자
    , M.EMPLOYEE_ID, M.FIRST_NAME, M.HIRE_DATE AS 매니저입사일자
  FROM
      EMPLOYEES E INNER JOIN EMPLOYEES M
   ON
      E.MANAGER_ID = M.EMPLOYEE_ID
WHERE
     TO_DATE(E.HIRE_DATE, 'YY/MM/DD') < TO_DATE(M.HIRE_DATE, 'YY/MM/DD') -- 날짜비교 (옛날, 작다)
ORDER BY
      E.EMPLOYEE_ID;
      
-- PK,FK가 아닌 일반 칼럼을 이용한 셀프 조인
-- 동일한 부서에서 근무하는 사원들을 조인하기 위해서 DEPARTMENT_ID로 조인조건을 생성

-- 사원(나)         사원(다른사원 남)
-- EMPLOYEES ME     EMPLOYEES YOU

-- 문제. 같은 부서에서 근무하는 사원 중에서 나보다 SALARY가 높은 사원 정보를 조회하시오.(HIRE_DATE 추가 가능)
SELECT
      ME.EMPLOYEE_ID, ME.FIRST_NAME, ME.SALARY AS 내급여
    , YOU.FIRST_NAME, YOU.SALARY AS 너급여
Y    , ME.DEPARTMENT_ID, YOU.DEPARTMENT_ID
  FROM
      EMPLOYEES ME INNER JOIN EMPLOYEES YOU
    ON
      ME.DEPARTMENT_ID = YOU.DEPARTMENT_ID
WHERE
      ME.SALARY < YOU.SALARY
ORDER BY
      ME.EMPLOYEE_ID;
      
-- 조인 연습.(상세보기)

-- 1. LOCATION_ID가 1700인 부서에 근무하는 사원들의 EMPLOYEE_ID, FIRST_NAME, DEPARTMENT_NAME을 조회하시오.
-- 1) 표준 문법
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, D.DEPARTMENT_NAME -- 조회하고자 하는 정보
  FROM DEPARTMENTS D INNER JOIN EMPLOYEES E  -- 테이블 명시
    ON D.DEPARTMENT_ID = E.DEPARTMENT_ID ---- 조인조건 ON
 WHERE D.LOCATION_ID = 1700; --'1700'문자로해도 가능, 오라클에선 숫자와 문자 연산시 결과값은 숫자이기때문

-- 2) 오라클 문법
SELECT
      E.EMPLOYEE_ID, E.FIRST_NAME, D.DEPARTMENT_NAME
  FROM DEPARTMENTS D, EMPLOYEES E
 WHERE D.DEPARTMENT_ID = E.DEPARTMENT_ID
   AND D.LOCATION_ID = 1700;-- LOCATION_ID>DEPARTMEENTS 테이블 열면 보임
    
-- 2. DEPARTMENT_NAME이 'Executive'인 부서에 근무하는 사원들의 EMPLOYEE_ID, FIRST_NAME을 조회하시오.
-- 1) 표준 문법
SELECT E.EMPLOYEE_ID, E.FIRST_NAME -- 조회하고자 하는 정보
  FROM DEPARTMENTS D INNER JOIN EMPLOYEES E -- 테이블 명시
    ON D.DEPARTMENT_ID = E.DEPARTMENT_ID --
 WHERE D.DEPARTMENT_NAME = 'Executive';
 
-- 2) 오라클 문법
SELECT E.EMPLOYEE_ID, E.FIRST_NAME
  FROM DEPARTMENTS D, EMPLOYEES E
 WHERE D.DEPARTMENT_ID = E.DEPARTMENT_ID
   AND D.DEPARTMENT_NAME =  'Executive';

-- 3. 모든사원들의 EMPLOYEE_ID, FIRST_NAME, DEPARTMENT_NAME, CITY를 조회하시오.
-- 1) 표준 문법
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, D.DEPARTMENT_NAME, L.CITY
  FROM LOCATIONS L INNER JOIN DEPARTMENTS D
    ON L.LOCATION_ID = D.LOCATION_ID INNER JOIN EMPLOYEES E-- L과D가 하나로 합친 테이블이 되었어!
    ON D.DEPARTMENT_ID = E.DEPARTMENT_ID;
  
-- 2) 오라클 문법(3개짜리)
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, D.DEPARTMENT_NAME, L.CITY
  FROM LOCATIONS L , DEPARTMENTS D, EMPLOYEES E
 WHERE L.LOCATION_ID = D.LOCATION_ID
   AND D.DEPARTMENT_ID = E.DEPARTMENT_ID; 

-- 4. 부서별 DEPARTMENT_NAME과 사원 수와 평균연봉 조회하시오.
-- GROUP BY와 JOIN 함께 사용해보기
SELECT D. DEPARTMENT_NAME, COUNT(*), AVG(E.SALARY)
  FROM DEPARTMENTS D INNER JOIN EMPLOYEES E
    ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
 GROUP BY D.DEPARTMENT_ID, D.DEPARTMENT_NAME; -- 둘 이상의 칼럼을 이용, 다중 그룹화 진행 가능

-- 부서별 DEPARTMENT_ID와 사원 수와 평균 연봉을 조회하시오. (위에 문제 어려움 먼저!)
SELECT DEPARTMENT_ID, COUNT(*), AVG(SALARY)
  FROM EMPLOYEES
 GROUP BY DEPARTMENT_ID; -- SELECT문에서 조회원하는 칼럼은 여기에 반드시 기재(DEPARTMENT_ID)

-- 5. 모든 사원들의 EMPLOYEE_ID, FIRST_NAME, DEPARTMENT_NAME을 조회하시오.
-- 178번 Kimberely사원의 부서가 NULL이라서 107명이 아닌 106명으로 나옴 / 사원이 오른쪽에 있음(사원은 다나와라! 오른쪽 외부조인으로)
-- 1) 표준 문법
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, D.DEPARTMENT_NAME
  FROM DEPARTMENTS D RIGHT OUTER JOIN EMPLOYEES E
    ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
ORDER BY E.EMPLOYEE_ID;

-- 2) 오라클 문법
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, D.DEPARTMENT_NAME
  FROM DEPARTMENTS D,  EMPLOYEES E
 WHERE D.DEPARTMENT_ID(+) = E.DEPARTMENT_ID
 ORDER BY E.EMPLOYEE_ID;

-- 6. 모든 부서의 DEPARTMENT_NAME과 근무 중인 사원 수를 조회하시오. 근무하는 사원이 없으면 0으로 조회하시오. > 외부조인
-- 부서테이블 27개의 부서가 있음, 사원이 근무중인 부서는 10개정도
-- 모든부서가 나오지 않기 때문에 내부가 아닌, 외부조인으로 조회!
-- 1) 표준 문법
SELECT D.DEPARTMENT_NAME, COUNT(E.EMPLOYEE_ID)
  FROM DEPARTMENTS D LEFT OUTER JOIN EMPLOYEES E
    ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
 GROUP BY D.DEPARTMENT_ID, D.DEPARTMENT_NAME;

